% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kind.R
\name{vec_kind}
\alias{vec_kind}
\title{Vector kind of an object}
\usage{
vec_kind(x)
}
\arguments{
\item{x}{An object.}
}
\value{
One of \code{"atom"}, \code{"atomic"}, \code{"recursive"}.

Can also be \code{c("atomic", "recursive")}. For instance, data frames
are both atomic (vector of rows) and recursive (list of columns).
}
\description{
Vector kind of an object
}
\section{Dispatch}{


This function is internally generic:
\itemize{
\item Bare atomic vectors are \code{atomic}.
\item Bare lists are \code{recursive}.
\item Data frames are both \code{atomic} and \code{recursive}.
}

All other cases can be overriden by implementing an S3 method for
the \code{vec_kind()} generic. The defaults are:
\itemize{
\item S3 atomic vectors are \code{atomic}.
\item S3 lists are \code{atom}. This means objects like model fit are not
treated as recursive.
}
}

