% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vctr-group-generics.R
\name{vec_grp}
\alias{vec_grp}
\alias{vec_grp_compare}
\alias{vec_grp_logical}
\alias{vec_grp_unary}
\alias{vec_grp_numeric}
\alias{vec_grp_summary}
\alias{vec_generic_call}
\title{vctr group generics}
\usage{
vec_grp_compare(generic, x, y)

vec_grp_logical(generic, x, y)

vec_grp_unary(generic, x)

vec_grp_numeric(generic, x, y)

vec_grp_summary(generic, x, na.rm = TRUE)

vec_generic_call(generic, x, y, ...)
}
\arguments{
\item{generic}{Name of generic function}

\item{x, y}{Vectors. \code{x} and \code{y} will always have the same ptype.}

\item{na.rm}{Remove missing values?}

\item{...}{Additional arguments passed to \code{generic}.}
}
\description{
These generics are inspired by the S3 \link{groupGeneric} functions, but use
\code{vec_ptype()} and \code{vec_cast()} to ensure that all inputs are of the same
type. They are also finer grained, additionally dividing up groups by arity
and return type. \code{vec_generic_call()} provides a convenient way to call the
default method of internal generics; this allows you to use existing base
R behaviour where possible.
}
\details{
vctrs provides five group generics:
\itemize{
\item \code{vec_grp_compare()}: \code{==}, \code{!=}, \code{<}, \code{<=}, \code{>=}, \code{>}
\item \code{vec_grp_logical()}: \code{&}, \code{|}, (unary) \code{!}
\item \code{vec_grp_unary()}: unary \code{+} and \code{-}.
\item \code{vec_grp_numeric()}: \code{+}, \code{-}, \code{*}, \code{/}, \code{^}, \code{\%\%}, \code{\%/\%}
\item \code{vec_grp_summary()}: \code{\link[=all]{all()}}, \code{\link[=any]{any()}}, \code{\link[=sum]{sum()}}, \code{\link[=prod]{prod()}}, \code{\link[=min]{min()}},
\code{\link[=max]{max()}}, \code{\link[=range]{range()}}`
}

If your vector is number-y you will generally implement \code{vec_grp_unary()},
\code{vec_grp_numeric()}, and \code{vec_grp_summary()}. If your vector is truth-y,
you will implement \code{vec_grp_logical()}
}
\section{Default methods}{


\code{vec_grp_compare()} and \code{vec_grp_logical()} call the internal method
and return a logical vector. \code{vec_grp_unary()}, \code{vec_grp_numeric()}, and
\code{vec_grp_summary()} will call the internal method, and then recast the
output to the same ptype as \code{x}.
}

\keyword{internal}
