% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subscript.R
\name{vec_as_subscript}
\alias{vec_as_subscript}
\alias{vec_as_subscript2}
\title{Convert to a base subscript type}
\usage{
vec_as_subscript(
  i,
  ...,
  indicator = c("coerce", "error"),
  location = c("coerce", "error"),
  name = c("coerce", "error"),
  arg = "i"
)

vec_as_subscript2(
  i,
  ...,
  indicator = c("coerce", "error"),
  location = c("coerce", "error"),
  name = c("coerce", "error"),
  arg = "i"
)
}
\arguments{
\item{i}{An integer, character or logical vector specifying the
locations or names of the observations to get/set. Specify
\code{TRUE} to index all elements (as in \code{x[]}), or \code{NULL}, \code{FALSE} or
\code{integer()} to index none (as in \code{x[NULL]}).}

\item{indicator, location, name}{How to handle indicator (logical),
location (numeric), and name (character) subscripts. If
\code{"coerce"}, the subscript is coerced to its base type,
e.g. factors are coerced to character. If \code{"error"}, this
subscript type is disallowed and causes an informative error.}

\item{arg}{The argument name to be displayed in error messages when
\code{vec_as_location()} and \code{vec_as_location2()} are used to check the
type of a function input.}
}
\description{
\Sexpr[results=rd, stage=render]{vctrs:::lifecycle("experimental")}

Convert \code{i} to the base type expected by \code{\link[=vec_as_location]{vec_as_location()}} or
\code{\link[=vec_as_location2]{vec_as_location2()}}. The values of the subscript type are
not checked in any way (length, missingness, negative elements).
}
\keyword{internal}
