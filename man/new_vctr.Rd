% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vctr.R
\name{new_vctr}
\alias{new_vctr}
\alias{vctr}
\title{vctr (vectr) S3 class}
\usage{
new_vctr(.data, ..., class = character())
}
\arguments{
\item{...}{Name-value pairs defining attributes}

\item{class}{Name of subclass.}

\item{x}{Foundation of class. Must be a vector}
}
\description{
This abstract class provides a set of useful default methods that makes it
considerably easier to get started with a new S3 vector class.
}
\section{Recommended workflow}{

\enumerate{
\item Start by creating a low-level constructor. It should be called
\code{new_myclass()}, and should check the types (but not the values)
of its inputs.
\item Depending on the class create either a helper \code{myclass()}, a coercer
\code{as_myclass()}, or both. A helper should construct valid values then
pass on to constructor. A coercer should either check values are correct,
or rely on the helper. Avoid defining validation code in multiple
places.
\item Define a useful \code{format.myclass()} method. This will give default
\code{print()} and \code{as.character()} methods that should be adequate for
most classes. Be warned: a good format method may be as much work
as the rest of the class put together!
\item Next provide \code{\link[=vec_type2]{vec_type2()}} and \code{\link[=vec_cast]{vec_cast()}}. First focus on the
casts between your class and its underlying the base type.
Next think about base types that should be coercible or castable.
See \code{vignette("s3-vector")} for details.
\item If your function behaves similarly to numbers or booleans, or has
specialised comparison methods, read \link{vec_grp} to learn about the vctrs
group generics: these allow you to implement many methods at once.
}

Implementing these methods gets you many methods for free:
\itemize{
\item \code{[[} and \code{[} use \code{NextMethod()} dispatch to the underlying base function,
reconstructing attributes with \code{vec_cast()}. \code{rep()} works similarly.
Override if one or more attributes have a one-to-one relationship to
the underlying data.
\item \code{[[<-} and \code{[<-} cast the RHS to the LHS, then call \code{NextMethod()}.
Override these methods if any attributes depend on the data.
\item \code{as.list.vctrs_vctr()} calls \code{[[} repeatedly, \code{as.character.vctrs_vctr()} calls
\code{format()}.
\item \code{as.data.frame.vctrs_vctr()} uses a standard technique to wrap a vector
in a data frame. You should never need to override this method.
\item \code{dims<-.vctrs_vctr()}, and \code{dimnames<-.vctrs_vctr()} all throw errors as generally
custom vector classes do not need to support dimensions.
}
}

\keyword{internal}
